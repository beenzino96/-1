package user;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public class UserDAO {
	
	private Connection conn;  데이터베이스에 접근해주는 객체
	private PreparedStatement pstmt; 
	private ResultSet rs; 정보를 담을 수있는  객체
crtl+shift+o를 눌러 java.sql.Connection 클릭 추가 외부 라이블러리


생성자 만들기 - 아래 문은 mySQL에 접속을 하게 만드는 과
	public UserDAO() {


 try catch 오류 확인
try {
			
			String dbURL= "jdbc:mysql://localhost:3306/BBS";
			String dbID="root";
			String dbPassword="1234";
			Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver"); SQL에 접근할수 있는 라이브러
		    conn = DriverManager.getConnection(dbURL, dbID, dbPassword);


		    예외처리 오류가 발생시 오류 출력
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	유저 아이디와 패스워드를 받아 주는 클래스
	public int login(String userID, String userPassword) {
		//System.Println("1111111111111111");
		String SQL = "SELECT userPassword FROM dbo.[USER] WHERE userID =  ?";
		
		try {
			pstmt = conn.prepareStatement(SQL);
			pstmt.setString(1, userID);
			rs = pstmt.executeQuery();
			if(rs.next()){
				if(rs.getString(1).equals(userPassword))
					return 1; // 로그인 성공
				else
					return 0; // 비밀번호 불일치
			}
			return -1; // 아이디가 없음
		}catch(Exception e) {
			e.printStackTrace();
		}
		return -2; // 데이터베이스 오류 
	}
	
	public int join(User user) {
		 String SQL = "insert into dbo.[USER](userID, userPassword, userName, userGender, userEmail) values(?,?,?,?,?)";
		 //String SQL = "INSERT INTO USER VALUES (?,?,?,?,?)";
		 //insert into dbo.[USER](userID, userPassoword, userName, userGender, userEmail)values('gildong', '123456', '홍길동', '남자', 'gildong@naver.com');
		 //SELECT userPassword FROM dbo.[USER] WHERE userID =  'sdfsdf';
		 try {
			  
			 pstmt = conn.prepareStatement(SQL);
			  
			  pstmt.setString(1,  user.getUserID());
			  pstmt.setString(2,  user.getUserPassword());
			  pstmt.setString(3,  user.getUserName());
			  pstmt.setString(4,  user.getUserGender());
			  pstmt.setString(5,  user.getUserEmail());
			  
			  return pstmt.executeUpdate();
			  
		 } catch(Exception e) {
			 e.printStackTrace();
		 }
		 return -1; // 데이터 베이스 오류 
	}

}
